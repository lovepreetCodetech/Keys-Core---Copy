@model KeysPlus.Service.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    string resetPage = ViewBag.resetSession;
}


<h2>@ViewBag.Title.</h2>



@if (resetPage == "true")
{

    using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @*<h4>Reset your password.</h4>*@
        <hr />
        @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
        @*@Html.HiddenFor(model => model.Code)*@
        @*<div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>*@
        <div class="login-page authentication">
            <div class="container form-container">

                <div class="card">
                    <h1 class="title"><span>Keys</span>Reset Password <span class="msg">Enter your password</span></h1>
                    <div class="col-md-12">
                        <div class="input-group">
                            <span class="input-group-addon"> <i class="zmdi zmdi-lock"></i> </span>

                            <div class="form-line">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = " New Password" })
                                @Html.ValidationMessage("Password", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon"> <i class="zmdi zmdi-lock"></i> </span>
                            <div class="form-line">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                                @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })
                            </div>
                        </div>
                        <input name="code" type="hidden" value="@(Html.Raw(ViewBag.token))" />
                        <input name="Email" type="hidden" value="@(Html.Raw(ViewBag.Email))" />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="text-center">
                                 
                                    <button class="btn btn-raised waves-effect btn-success" type="submit">RESET</button>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            </div>
            @*<div>@TempData["Status"]</div>*@

            }


            }
            else
            {
            <div>@TempData["Status"]</div>
            }

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
